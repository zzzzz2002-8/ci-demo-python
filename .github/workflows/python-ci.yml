name: Python CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 安装项目
      run: |
        python setup.py install

    - name: 运行测试
      run: |
        pytest tests/ --junitxml=test-results-${{ matrix.python-version }}.xml --html=test-report-${{ matrix.python-version }}.html --self-contained-html

    - name: 上传测试报告(HTML)
      uses: actions/upload-artifact@v3
      with:
        name: test-report-${{ matrix.python-version }}
        path: test-report-${{ matrix.python-version }}.html

    - name: 上传测试报告(JUnit)
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.python-version }}
        path: test-results-${{ matrix.python-version }}.xml

    - name: 构建软件包
      run: |
        python setup.py sdist bdist_wheel

    - name: 上传软件包
      uses: actions/upload-artifact@v3
      with:
        name: python-package
        path: dist/*

    - name: 发布测试覆盖率
      if: ${{ matrix.python-version == '3.10' }}
      run: |
        pip install pytest-cov
        pytest --cov=src --cov-report=xml
        bash <(curl -s https://codecov.io/bash)
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}